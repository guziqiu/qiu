#include <iostream>
using namespace std;
#define MAX_N 400000
#define BASE 40

struct Node {
    Node *next[2];
} tree[MAX_N * BASE + 5]; 

int cnt = 0;
Node *getNewNode() {
    return &tree[cnt++];
}

void insert(Node *root, int x) { 
    for (int i = 30; i >= 0; i--) {
        int ind = !!(x & (1 << i));
         
        if (root->next[ind] == NULL) root->next[ind] = getNewNode();
        root = root->next[ind];
    }
     //cout << "1"  << endl;
}

int query(Node *root, int x) {
    
    int ans = 0;
    for (int i = 30; i >= 0; i--) {
        int ind = !(x & (1 << i));//
        if (root->next[ind]) { 
            ans |= (1 << i); 
            root = root->next[ind];
        } else {
            root = root->next[!ind];
        }
    }
    return ans;
}


 

int main() {
    //第一行一个整数 𝑁，第二行 𝑁 个正整数 𝐴1−𝐴𝑁。
    int n;
    scanf("%d", &n);
    int ans = 0;
    int val;
    Node *root = getNewNode();
    scanf("%d", &val);
    insert(root, val);
    n--;
    //cout << "1"  << endl;
    while (n--) {
        scanf("%d", &val);
        ans = max(query(root, val), ans);
        insert(root, val);
    }
    printf("%d\n", ans);


    return 0;
}

